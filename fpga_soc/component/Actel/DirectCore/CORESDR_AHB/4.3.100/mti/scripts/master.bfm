#===========================================================
#
# Syntax:
# -------
#
# memmap    resource_name base_address;
#
# write     width resource_name byte_offset data;
# read      width resource_name byte_offset;
# readcheck width resource_name byte_offset data;
# wait      clock_ticks;
# poll      width resource_name byte_offset bit_mask;
#
#===========================================================


#-----------------------------------------------------------
# Memory Map
# Define name and base address of each resource.
#-----------------------------------------------------------
memmap address0 0x00000000;
memmap address1 0x00000010;
memmap address2 0x00000100;
memmap address3 0x00030000;
memmap address4 0x00100000;
memmap address5 0x00050000;
memmap address6 0x00006000;
memmap address7 0x00000700;
memmap address8 0x00000080;
memmap address9 0x00000900;
memmap address10 0x000a0000;
memmap address11 0x00070000;
memmap address12 0x000c0000;
memmap address13 0x0000d000;
memmap address14 0x00000e00;
memmap address15 0x0000f000;

// global variables to store local copy of testbench parameters and constants
// derived from testbench parameters
int FAMILY 

procedure main

int i,k;

header "CoreAhbSDR Master Test Harness"
debug 1;



// initialize local variables passed from testbench HDL to the
// ARGVALUE* BFM parameters
call init_parameter_vars
timeout 100000	// timeout in cycles, in case BFM stalls
wait 10000  // initialization delay for SDRAM

## -----------------------------------------------------------------
## AS: Test for SAR 43183 (http://bugzilla/show_bug.cgi?id=43183)
loop k 0x0 0x10 0x1
  write h 0x00000006 0x0 0x500d;
  readcheck h 0x00000006 0x0 0x500d;
  write b 0x00000006 0x0 0xdd;
  write b 0x00000007 0x0 0xee;
  readcheck h 0x00000006 0x0 0xeedd;
endloop
# -----------------------------------------------------------------
# AS: Test for SAR 43066 (http://bugzilla/show_bug.cgi?id=43066)
#write w 0x04c11db4 0x0 0xd4326dd;
#readcheck w 0x04c11db4 0x0 0xd4326dd;

## AS: Test for word vs. halfword accesses (From Mahesh)
#write w 0x00000000 0x0 0x04c11db5;
#write h 0x00000002 0x0 0x26dd;
#readcheck w 0x00000000 0x0 0x26dd1db5;
#
## -----------------------------------------------------------------
#
#
## Address0 
## Test byte/halfword/word writes and reads
#     print " Write to Address0 from Master "
#     write     w address0 0x0 0x12345678;
#     print " Read and Verify from Address0 for Master "
#     readcheck w address0 0x0 0x12345678;
#     print " Write to Address0 from Master "
#     write     h address0 0x0 0xdead;
#     print " Write to Address0 from Master "
#     write     h address0 0x2 0xbeef;
#     print " Read and Verify from Address0 for Master "
#     readcheck h address0 0x0 0xdead;
#     print " Read and Verify from Address0 for Master "
#     readcheck h address0 0x2 0xbeef;
#     print " Write to Address0 from Master "
#     write     b address0 0x0 0x9a;
#     print " Write to Address0 from Master "
#     write     b address0 0x1 0x56;
#     print " Write to Address0 from Master "
#     write     b address0 0x2 0x34;
#     print " Write to Address0 from Master "
#     write     b address0 0x3 0x12;
#     print " Read and Verify from Address0 for Master "
#     readcheck w address0 0x0 0x1234569a;
#     readcheck b address0 0x0 0x9a;
#     readcheck b address0 0x1 0x56;
#     readcheck b address0 0x2 0x34;
#     readcheck b address0 0x3 0x12;
#     print " Write to Address0 from Master "
#     write     w address0 0x0 0xFFFFFFFF;
#     print " Read and Verify from Address0 for Master "
#     readcheck w address0 0x0 0xFFFFFFFF;
#
## Address1 
## Test byte/halfword/word writes and reads
#      print " Write to Address1 from Master "
#      write     w address1 0x0 0x12345678;
#      print " Read and Verify from Address1 for Master "
#      readcheck w address1 0x0 0x12345678;
#      print " Write to Address1 from Master "
#      write     h address1 0x0 0xdead;
#      print " Write to Address1 from Master "
#      write     h address1 0x2 0xbeef;
#      print " Read and Verify from Address1 for Master "
#      readcheck h address1 0x0 0xdead;
#      print " Read and Verify from Address1 for Master "
#      readcheck h address1 0x2 0xbeef;
#      print " Write to Address1 from Master "
#      write     b address1 0x0 0x9a;
#      print " Write to Address1 from Master "
#      write     b address1 0x1 0x56;
#      print " Write to Address1 from Master "
#      write     b address1 0x2 0x34;
#      print " Write to Address1 from Master "
#      write     b address1 0x3 0x12;
#      print " Read and Verify from Address1 for Master "
#      readcheck w address1 0x0 0x1234569a;
#      readcheck b address1 0x0 0x9a;
#      readcheck b address1 0x1 0x56;
#      readcheck b address1 0x2 0x34;
#      readcheck b address1 0x3 0x12;
#      print " Write to Address1 from Master "
#      write     w address1 0x0 0xFFFFFFFF;
#      print " Read and Verify from Address1 for Master "
#      readcheck w address1 0x0 0xFFFFFFFF;
#
## Address2 
## Test byte/halfword/word writes and reads
#      print " Write to Address2 from Master "
#      write     w address2 0x0 0x12345678;
#      print " Read and Verify from Address2 for Master "
#      readcheck w address2 0x0 0x12345678;
#      print " Write to Address2 from Master "
#      write     b address2 0x0 0x9a;
#      print " Read and Verify from Address2 for Master "
#      readcheck w address2 0x0 0x1234569a;
#      readcheck b address2 0x0 0x9a;
#      readcheck b address2 0x1 0x56;
#      readcheck b address2 0x2 0x34;
#      print " Write to Address2 from Master "
#      write     h address2 0x0 0x9876;
#      print " Write to Address2 from Master "
#      write     h address2 0x2 0x5432;
#      print " Read and Verify from Address2 for Master "
#      readcheck h address2 0x0 0x9876;
#      print " Read and Verify from Address2 for Master "
#      readcheck h address2 0x2 0x5432;
#
## Address3 
## Test byte/halfword/word writes and reads
#      print " Write to Address3 from Master "
#      write     w address3 0x0 0x12345678;
#      print " Read and Verify from Address3 for Master "
#      readcheck w address3 0x0 0x12345678;
#      print " Write to Address3 from Master "
#      write     b address3 0x0 0x9a;
#      print " Read and Verify from Address3 for Master "
#      readcheck w address3 0x0 0x1234569a;
#      readcheck b address3 0x0 0x9a;
#      readcheck b address3 0x1 0x56;
#      readcheck b address3 0x2 0x34;
#      print " Write to Address3 from Master "
#      write     h address3 0x0 0x9876;
#      print " Write to Address3 from Master "
#      write     h address3 0x2 0x5432;
#      print " Read and Verify from Address3 for Master "
#      readcheck h address3 0x0 0x9876;
#      print " Read and Verify from Address3 for Master "
#      readcheck h address3 0x2 0x5432;
#
## Address4
## Test byte/halfword/word writes and reads
#      print " Write to Address4 from Master "
#      write     w address4 0x0 0x12345678;
#      print " Read and Verify from Address4 for Master "
#      readcheck w address4 0x0 0x12345678;
#      print " Write to Address4 from Master "
#      write     b address4 0x0 0x9a;
#      print " Read and Verify from Address4 for Master "
#      readcheck w address4 0x0 0x1234569a;
#      readcheck b address4 0x0 0x9a;
#      readcheck b address4 0x1 0x56;
#      readcheck b address4 0x2 0x34;
#
## Address5
## Test byte/halfword/word writes and reads
#      print " Write to Address5 from Master "
#      write     w address5 0x0 0x12345678;
#      print " Read and Verify from Address5 for Master "
#      readcheck w address5 0x0 0x12345678;
#      print " Write to Address5 from Master "
#      write     b address5 0x0 0x9a;
#      print " Read and Verify from Address5 for Master "
#      readcheck w address5 0x0 0x1234569a;
#      readcheck b address5 0x0 0x9a;
#      readcheck b address5 0x1 0x56;
#      readcheck b address5 0x2 0x34;
#
## Address6
## Test byte/halfword/word writes and reads
#      print " Write to Address6 from Master "
#      write     w address6 0x0 0x12345678;
#      print " Read and Verify from Address6 for Master "
#      readcheck w address6 0x0 0x12345678;
#      print " Write to Address6 from Master "
#      write     b address6 0x0 0x9a;
#      print " Read and Verify from Address6 for Master "
#      readcheck w address6 0x0 0x1234569a;
#      readcheck b address6 0x0 0x9a;
#      readcheck b address6 0x1 0x56;
#      readcheck b address6 0x2 0x34;
#
## Address7
## Test byte/halfword/word writes and reads
#      print " Write to Address7 from Master "
#      write     w address7 0x0 0x12345678;
#      print " Read and Verify from Address7 for Master "
#      readcheck w address7 0x0 0x12345678;
#      print " Write to Address7 from Master "
#      write     b address7 0x0 0x9a;
#      print " Read and Verify from Address7 for Master "
#      readcheck w address7 0x0 0x1234569a;
#      readcheck b address7 0x0 0x9a;
#      readcheck b address7 0x1 0x56;
#      readcheck b address7 0x2 0x34;
#
## Address8
## Test byte/halfword/word writes and reads
#      print " Write to Address8 from Master "
#      write     w address8 0x0 0x12345678;
#      print " Read and Verify from Address8 for Master "
#      readcheck w address8 0x0 0x12345678;
#      print " Write to Address8 from Master "
#      write     b address8 0x0 0x9a;
#      print " Read and Verify from Address8 for Master "
#      readcheck w address8 0x0 0x1234569a;
#      readcheck b address8 0x0 0x9a;
#      readcheck b address8 0x1 0x56;
#      readcheck b address8 0x2 0x34;
#
## Address9
## Test byte/halfword/word writes and reads
#      print " Write to Address9 from Master "
#      write     w address9 0x0 0x12345678;
#      print " Read and Verify from Address9 for Master "
#      readcheck w address9 0x0 0x12345678;
#      print " Write to Address9 from Master "
#      write     b address9 0x0 0x9a;
#      print " Read and Verify from Address9 for Master "
#      readcheck w address9 0x0 0x1234569a;
#      readcheck b address9 0x0 0x9a;
#      readcheck b address9 0x1 0x56;
#      readcheck b address9 0x2 0x34;
#
## Address10
## Test byte/halfword/word writes and reads
#      print " Write to Address10 from Master "
#      write     w address10 0x0 0x12345678;
#      print " Read and Verify from Address10 for Master "
#      readcheck w address10 0x0 0x12345678;
#      print " Write to Address10 from Master "
#      write     b address10 0x0 0x9a;
#      print " Read and Verify from Address10 for Master "
#      readcheck w address10 0x0 0x1234569a;
#      readcheck b address10 0x0 0x9a;
#      readcheck b address10 0x1 0x56;
#      readcheck b address10 0x2 0x34;
#
## Address11
## Test byte/halfword/word writes and reads
#      print " Write to Address11 from Master "
#      write     w address11 0x0 0x12345678;
#      print " Read and Verify from Address11 for Master "
#      readcheck w address11 0x0 0x12345678;
#      print " Write to Address11 from Master "
#      write     b address11 0x0 0x9a;
#      print " Read and Verify from Address11 for Master "
#      readcheck w address11 0x0 0x1234569a;
#      readcheck b address11 0x0 0x9a;
#      readcheck b address11 0x1 0x56;
#      readcheck b address11 0x2 0x34;
#
## Address12
## Test byte/halfword/word writes and reads
#      print " Write to Address12 from Master "
#      write     w address12 0x0 0x12345678;
#      print " Read and Verify from Address12 for Master "
#      readcheck w address12 0x0 0x12345678;
#      print " Write to Address12 from Master "
#      write     b address12 0x0 0x9a;
#      print " Read and Verify from Address12 for Master "
#      readcheck w address12 0x0 0x1234569a;
#      readcheck b address12 0x0 0x9a;
#      readcheck b address12 0x1 0x56;
#      readcheck b address12 0x2 0x34;
#
## Address13
## Test byte/halfword/word writes and reads
#      print " Write to Address13 from Master "
#      write     w address13 0x0 0x12345678;
#      print " Read and Verify from Address13 for Master "
#      readcheck w address13 0x0 0x12345678;
#      print " Write to Address13 from Master "
#      write     b address13 0x0 0x9a;
#      print " Read and Verify from Address13 for Master "
#      readcheck w address13 0x0 0x1234569a;
#      readcheck b address13 0x0 0x9a;
#      readcheck b address13 0x1 0x56;
#      readcheck b address13 0x2 0x34;
#
## Address14
## Test byte/halfword/word writes and reads
#      print " Write to Address14 from Master "
#      write     w address14 0x0 0x12345678;
#      print " Read and Verify from Address14 for Master "
#      readcheck w address14 0x0 0x12345678;
#      print " Write to Address14 from Master "
#      write     b address14 0x0 0x9a;
#      print " Read and Verify from Address14 for Master "
#      readcheck w address14 0x0 0x1234569a;
#      readcheck b address14 0x0 0x9a;
#      readcheck b address14 0x1 0x56;
#      readcheck b address14 0x2 0x34;
#
## Address15
## Test byte/halfword/word writes and reads
#      print " Write to Address15 from Master "
#      write     w address15 0x0 0x12345678;
#      print " Read and Verify from Address15 for Master "
#      readcheck w address15 0x0 0x12345678;
#      print " Write to Address15 from Master "
#      write     b address15 0x0 0x9a;
#      print " Read and Verify from Address15 for Master "
#      readcheck w address15 0x0 0x1234569a;
#      readcheck b address15 0x0 0x9a;
#      readcheck b address15 0x1 0x56;
#      readcheck b address15 0x2 0x34;

# -----------------------------------------------------------------
# loop through a bunch of different addresses (AS)
# -----------------------------------------------------------------
#loop i 0x00000000 0x00001000 0x04
#  write w i 0x0 i;
#endloop

#loop i 0x00000000 0x00001000 0x04
#  readcheck w i 0x0 i;
#endloop

#loop i 0x00000000 0x00001000 0x02
#  write h i 0x0 i;
#endloop

#loop i 0x00000000 0x00001000 0x02
#  readcheck h i 0x0 i;
#endloop
  
return

//---------------------------------------------------------------------------
// initialize local variables from the ARGVALUE* BFM parameters passed
// down from the testbench HDL
//---------------------------------------------------------------------------
procedure init_parameter_vars
	set FAMILY			        $ARGVALUE0
return
